[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[project]
name = "no-more-secrets"
version = "1.0.0"
description = "A Python recreation of the famous data decryption effect from the 1992 movie Sneakers"
authors = [
    {name = "Your Name", email = "your.email@example.com"}
]
license = {text = "GPL-3.0"}
readme = "README.md"
requires-python = ">=3.10"
keywords = ["terminal", "effect", "encryption", "sneakers", "movie", "animation"]
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Environment :: Console",
    "Intended Audience :: End Users/Desktop",
    "License :: OSI Approved :: GNU General Public License v3 (GPLv3)",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Multimedia :: Graphics",
    "Topic :: Terminals",
    "Topic :: Utilities",
]
dependencies = [
    "colorama; sys_platform == 'win32'"
]

[project.urls]
Homepage = "https://github.com/ondrovic/no-more-secrets-python"
Repository = "https://github.com/ondrovic/no-more-secrets-python"
"Bug Tracker" = "https://github.com/ondrovic/no-more-secrets-python/issues"

[project.scripts]
nms = "no_more_secrets.cli.main:main"
sneakers = "no_more_secrets.cli.sneakers:main"

[project.optional-dependencies]
dev = [
    "pytest",
    "pytest-cov",
    "black",
    "isort",
    "flake8",
    "mypy",
    "pre-commit",
]
docs = [
    "mkdocs",
    "mkdocs-material",
]
test = [
    "pytest",
    "pytest-cov",
]

[tool.poetry]
packages = [{include = "no_more_secrets"}]

[tool.poetry.group.dev.dependencies]
pytest = "*"
pytest-cov = "*"
black = "*"
isort = "*"
flake8 = "*"
mypy = "*"
pre-commit = "*"

[tool.poetry.group.docs.dependencies]
mkdocs = "*"
mkdocs-material = "*"
mkdocstrings = "*"
mkdocstrings-python = "*"

[tool.poetry.group.test.dependencies]
pytest = "*"
pytest-cov = "*"

[tool.black]
line-length = 88
target-version = ['py310']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
known_first_party = ["no_more_secrets"]

[tool.mypy]
python_version = "3.10"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

# Platform-specific modules that may not be available
[[tool.mypy.overrides]]
module = [
    "termios",
    "tty", 
    "select",
    "msvcrt",
    "colorama"
]
ignore_missing_imports = true

[tool.pytest.ini_options]
minversion = "6.0"
addopts = "-ra -q --strict-markers --strict-config"
testpaths = [
    "tests",
]
python_files = [
    "test_*.py",
    "*_test.py",
]

[tool.coverage.run]
source = ["no_more_secrets"]
omit = [
    "*/tests/*",
    "*/test_*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]